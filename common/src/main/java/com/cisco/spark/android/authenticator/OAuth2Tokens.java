package com.cisco.spark.android.authenticator;

import android.text.TextUtils;

import com.google.gson.annotations.*;

public class OAuth2Tokens extends OAuth2AccessToken {
    @SerializedName("refresh_token")
    protected String refreshToken;

    public OAuth2Tokens() {}

    public OAuth2Tokens(OAuth2Tokens token) {
        super();
        update(token);
    }

    public String getRefreshToken() {
        return refreshToken;
    }

    public void update(OAuth2AccessToken token) {
        this.expiresIn = token.getExpiresIn();
        this.accessToken = token.getAccessToken();
        if (token instanceof OAuth2Tokens) {
            String newRefreshToken = ((OAuth2Tokens) token).getRefreshToken();
            if (!TextUtils.isEmpty(newRefreshToken)) {
                this.refreshToken = newRefreshToken;
            }
        }
        recordOptimisticRefreshTime();
    }

    @Override
    public String getAuthorizationHeader() {
        return super.getAuthorizationHeader();
    }

    // Auto-generated by AndroidStudio

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        OAuth2Tokens that = (OAuth2Tokens) o;

        return refreshToken != null ? refreshToken.equals(that.refreshToken) : that.refreshToken == null;

    }

    @Override
    public int hashCode() {
        return refreshToken != null ? refreshToken.hashCode() : 0;
    }
}
