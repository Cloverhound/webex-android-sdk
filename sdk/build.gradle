apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
	
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "com.ciscospark.androidsdk.SparkTestRunner"
        multiDexEnabled true
    }

    buildTypes {
        release { 
			minifyEnabled true
//          proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"

        dexInProcess false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.ciscospark'
            artifactId 'androidsdk'
            version '0.0.1-SNAPSHOT'
            artifact "$buildDir/outputs/aar/sdk-debug.aar" //aar artifact you want to publish

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { dependency ->
                    if (dependency.group?.trim()) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                        if (!dependency.transitive || dependency.name == 'common-lib') {
                            dependencyNode.appendNode('type', 'aar')
                        }
                    }
                }
            }
        }
    }

    repositories{
        maven {
            url "$buildDir/repo"
        }
    }
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile('com.cisco.spark.android:common-lib:2.0.3886-SNAPSHOT@aar', {
        transitive = true
    })
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
